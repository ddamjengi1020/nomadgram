// npx prisma migrate save --name init --experimental >>> executing in prisma directory 
// npx prisma migrate up --experimental
// npx prisma generate


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int     @id @default(autoincrement())
  userName  String  @unique
  email     String  @unique
  firstName String  @default("")
  lastName  String
  bio       String
  posts     Post[]
  likes     Like[] 
  comments  Comment[]
  followers User[] @relation("follow")
  following User[] @relation("follow")
  rooms     Room[] @relation(references: [id])
  fromMessage Message[] @relation("from")
  ToMessage Message[] @relation("to")
}

model Post {
  id       Int @id @default(autoincrement())
  location String
  caption  String
  user     User @relation(fields: [userId], references: [id])
  userId   Int
  likes    Like[]
  comments Comment[] 
  files    File[] 
}

model Like {
  id     Int @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Comment {
  id     Int @id @default(autoincrement())
  text   String
  user   User @relation(fields: [userId], references:[id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model File {
  id     Int @id @default(autoincrement())
  url    String
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Room {
    id           Int @id @default(autoincrement())
    participants User[] @relation(references: [id])
    messages     Message[]
}

model Message {
    id     Int @id @default(autoincrement())
    text   String
    from   User @relation("from", fields:[fromUserId], references: [id])
    fromUserId Int
    to     User @relation("to", fields: [toUserId], references: [id])
    toUserId Int
    room   Room @relation(fields: [roomId], references:[id])
    roomId Int
}
